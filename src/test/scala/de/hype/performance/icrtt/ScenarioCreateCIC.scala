package de.hype.performance.icrtt

import com.excilys.ebi.gatling.http.Predef._
import com.excilys.ebi.gatling.core.Predef._

object ScenarioCreateCIC {
    val scn = scenario("Create CIC")
        .exec(http("login")
            .get("/trust")
            .headers(Headers.headers_get)
        )
        .exec(http("login")
            .get("/trust")
            .headers(Headers.headers_get)
            .queryParam( """username""", """CIC_Vehicle""")
        )
        .exec(http("load start page")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """userAction""", """BrowseCurrentUser""")
            .queryParam( """templateName""", """MenuItem""")
            .check(regex( """var csrfToken = '(.+?)'""").saveAs("csrfToken"))
        )
        .exec(http("load MyICRTT")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """userAction""", """BrowseCurrentUser""")
            .queryParam( """rkId""", """13243357""")
            .queryParam( """templateName""", """MenuItem""")
        )
        .exec(http("create new CIC")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """InvokeStatic""")
            .param( """qualifiedClassName""", """hype.apps.imt.ImtUtilProxy""")
            .param( """methodName""", """createNewIdeaWithTypeAndLinkFields""")
            .multiValuedParam( """argsAsStrings""", List("13221588", "13273577", ""))
            .param( """csrfToken""", "${csrfToken}")
            .check(regex( """\d+""").saveAs("ideaId"))
        )
        .exec(http("load new CIC")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """userAction""", """Browse""")
            .queryParam( """documentId""", "${ideaId}")
            .queryParam( """templateName""", """""")
            .check(regex( """.*Technical Change""").transform(s => """(\d+), 'Stichw.+?'""".r.findFirstMatchIn(s).get.group(1)).saveAs("sourceId"))
            .check(regex( """var uniqueLong = '(\d+)'""").saveAs("uniqueLong"))
            .check(regex( """actionChangeLinksExplorer.*Select Leading Program Structure""").transform(s => """'Stichw.+?', '([\d\,]+)'""".r.findFirstMatchIn(s).get.group(1)).saveAs("templateContext"))
            .check(regex( """actionChangeLinksExplorer.*Select Leading Program Structure""").transform(s => """'([0-9a-f\-]*)', 'Stichw.+?'""".r.findFirstMatchIn(s).get.group(1)).saveAs("dialogParamsId"))
            .check(regex( """actionChangeLinksExplorer.*Select Leading Program Structure""").transform(s => """(\d+), '[0-9a-f\-]+', 'Stichw.+?'""".r.findFirstMatchIn(s).get.group(1)).saveAs("docId"))
            .check(regex( """Upload Illustration.*""").transform(s => """data-role-id="([0-9a-f\-]+)""".r.findFirstMatchIn(s).get.group(1)).saveAs("roleId"))
            .check(regex( """Upload Illustration.*""").transform(s => """data-document-id="(\d+)""".r.findFirstMatchIn(s).get.group(1)).saveAs("pictureDocId"))
        )
        .exec(http("upload image")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .queryParam("""userAction""", """UploadAndLink""")
            .param( """documentId""", "${pictureDocId}")
            .param( """roleId""", "${roleId}")
            .param( """csrfToken""", "${csrfToken}")
            .upload( "files", "track_my_ideas_.jpg", "image/jpeg", "ISO-8859-1")
        )
        .exec(http("set title")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """SetGenericSlotValue""")
            .param( """identifier""", "hype.apps.imt.storage.TextSlot-${ideaId}-13222097")
            .param( """slotValue""", """Rubber""")
            .param( """formatString""", """""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("update page")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """nameOfUpdatable""", "titelText${ideaId}")
            .queryParam( """userAction""", """BrowseSubdocument""")
            .queryParam( """documentId""", "${ideaId}")
            .queryParam( """templateName""", """Title""")
        )
        .exec(http("set description")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """SetGenericSlotValue""")
            .param( """identifier""", "hype.apps.imt.storage.TextSlot-${ideaId}-13222113")
            .param( """slotValue""", """Rubber""")
            .param( """formatString""", """""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("set savings leverage type")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """NewLinksForChoice""")
            .param( """sourceId""", "${sourceId}")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """targetId""", """13228155""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_30")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """userAction""", """Browse""")
            .queryParam( """documentId""", "${ideaId}")
            .queryParam( """templateName""", """""")
        )
        .exec(http("select leading program structure")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """treeId""", "Tree${uniqueLong}")
            .queryParam( """expandSelected""", """true""")
            .queryParam( """thresholdToHideTree""", """-1""")
            .queryParam( """titleOrEmptyString""", """Select Leading Program Structure...""")
            .queryParam( """templateContext""", "${templateContext}")
            .queryParam( """userAction""", """LinksExplorerDialog""")
            .queryParam( """disableUnlink""", """false""")
            .queryParam( """roleName""", """Stichw~00f6~rter""")
            .queryParam( """ldapSearch""", """true""")
            .queryParam( """docId""", "${docId}")
            .queryParam( """expandDepth""", """0""")
            .queryParam( """dialogParamsId""", "${dialogParamsId}")
        )
        .exec(http("set leading program structure")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """LinksExplorerDialog""")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """dialogParamsId""", "${dialogParamsId}")
            .param( """docId""", "${docId}")
            .param( """titleOrEmptyString""", """""")
            .param( """treeId""", "Tree${uniqueLong}")
            .multiValuedParam( """docIds""", List("13227218", "13231038"))
            .param( """templateContext""", "${templateContext}")
            .param( """expandSelected""", """true""")
            .param( """expandDepth""", """-1""")
            .param( """ldapSearch""", """false""")
            .param( """disableUnlink""", """false""")
            .param( """thresholdToHideTree""", """0""")
            .param( """visualizeSelectionIncludesChildren""", """false""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_58")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """LinksExplorerDialog""")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """dialogParamsId""", "${dialogParamsId}")
            .param( """docId""", "${docId}")
            .param( """titleOrEmptyString""", """""")
            .param( """treeId""", "Tree${uniqueLong}")
            .multiValuedParam( """docIds""", List("13227218", "13231038", "13231220"))
            .param( """templateContext""", "${templateContext}")
            .param( """expandSelected""", """true""")
            .param( """expandDepth""", """-2""")
            .param( """ldapSearch""", """false""")
            .param( """disableUnlink""", """false""")
            .param( """thresholdToHideTree""", """0""")
            .param( """visualizeSelectionIncludesChildren""", """false""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_60")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """AddAndDeleteLinks""")
            .param( """documentId""", "${docId}")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """addTargetIds""", """13231849""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_61")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """userAction""", """Browse""")
            .queryParam( """documentId""", "${ideaId}")
            .queryParam( """templateName""", """""")
            .check(regex( """var uniqueLong = '(\d+)'""").saveAs("uniqueLong"))
            .check(regex( """actionChangeLinksExplorer.*Select Affected Program Structure""").transform(s => """'Stichw.+?', '([\d\,]+)'""".r.findFirstMatchIn(s).get.group(1)).saveAs("templateContext"))
            .check(regex( """actionChangeLinksExplorer.*Select Affected Program Structure""").transform(s => """'([0-9a-f\-]*)', 'Stichw.+?'""".r.findFirstMatchIn(s).get.group(1)).saveAs("dialogParamsId"))
            .check(regex( """actionChangeLinksExplorer.*Select Affected Program Structure""").transform(s => """(\d+), '[0-9a-f\-]+', 'Stichw.+?'""".r.findFirstMatchIn(s).get.group(1)).saveAs("docId"))
        )
        .exec(http("select affected program structure")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """treeId""", "Tree${uniqueLong}")
            .queryParam( """expandSelected""", """true""")
            .queryParam( """thresholdToHideTree""", """-1""")
            .queryParam( """titleOrEmptyString""", """Select Affected Program Structure(s)...""")
            .queryParam( """templateContext""", "${templateContext}")
            .queryParam( """userAction""", """LinksExplorerDialog""")
            .queryParam( """disableUnlink""", """false""")
            .queryParam( """roleName""", """Stichw~00f6~rter""")
            .queryParam( """ldapSearch""", """true""")
            .queryParam( """docId""", "${docId}")
            .queryParam( """expandDepth""", """0""")
            .queryParam( """dialogParamsId""", "${dialogParamsId}")
        )
        .exec(http("set affected program structure")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """LinksExplorerDialog""")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """dialogParamsId""", "${dialogParamsId}")
            .param( """docId""", "${docId}")
            .param( """titleOrEmptyString""", """""")
            .param( """treeId""", "Tree${uniqueLong}")
            .multiValuedParam( """docIds""", List("13227218", "13230980"))
            .param( """templateContext""", "${templateContext}")
            .param( """expandSelected""", """true""")
            .param( """expandDepth""", """-1""")
            .param( """ldapSearch""", """false""")
            .param( """disableUnlink""", """false""")
            .param( """thresholdToHideTree""", """0""")
            .param( """visualizeSelectionIncludesChildren""", """false""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_74")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """LinksExplorerDialog""")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """dialogParamsId""", "${dialogParamsId}")
            .param( """docId""", "${docId}")
            .param( """titleOrEmptyString""", """""")
            .param( """treeId""", "Tree${uniqueLong}")
            .multiValuedParam( """docIds""", List("13227218", "13230980", "13231049"))
            .param( """templateContext""", "${templateContext}")
            .param( """expandSelected""", """true""")
            .param( """expandDepth""", """-2""")
            .param( """ldapSearch""", """false""")
            .param( """disableUnlink""", """false""")
            .param( """thresholdToHideTree""", """0""")
            .param( """visualizeSelectionIncludesChildren""", """false""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_75")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """AddAndDeleteLinks""")
            .param( """documentId""", "${docId}")
            .param( """roleName""", """Stichw~00f6~rter""")
            .param( """addTargetIds""", """13231242""")
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_76")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """nameOfUpdatable""", "stketext${docId}")
            .queryParam( """userAction""", """BrowseSubdocument""")
            .queryParam( """documentId""", """${docId}""")
            .queryParam( """templateName""", """TextUpdateable""")
        )
        .exec(http("request_77")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """InvokeStatic""")
            .param( """qualifiedClassName""", """hype.apps.imt.ImtUtilProxy""")
            .param( """methodName""", """isStatusChangePreconditionSatisfied""")
            .multiValuedParam( "argsAsStrings", session => List(session.getTypedAttribute("ideaId"), "13272378"))
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_78")
            .post("/servlet/hype/IMT")
            .headers(Headers.headers_post)
            .param( """userAction""", """InvokeStatic""")
            .param( """qualifiedClassName""", """hype.apps.imt.ImtUtilProxy""")
            .param( """methodName""", """setIdeaStatusAndProcessHistoryEntry""")
            .multiValuedParam( "argsAsStrings", session => List(session.getTypedAttribute("ideaId"), "13239892", "", "13272378"))
            .param( """csrfToken""", "${csrfToken}")
        )
        .exec(http("request_79")
            .get("/servlet/hype/IMT")
            .headers(Headers.headers_get)
            .queryParam( """userAction""", """Browse""")
            .queryParam( """documentId""", "${ideaId}")
            .queryParam( """templateName""", """""")
        )
}
